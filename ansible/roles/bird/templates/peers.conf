#jinja2: lstrip_blocks:True
{% for peer in peers %}
	{% for neighbor in peer.neighbors %}
		{% set ns = namespace(found_ix=none, neighbor_name=none, inet=none, peer_type=peer.type | default("peer")) %}
		{% if neighbor.ip | ansible.utils.ipv6 %}
			{% set ns.inet = "INET6" %}
		{% elif neighbor.ip | ansible.utils.ipv4 %}
			{% set ns.inet = "INET4" %}
		{% endif %}
		{% set neighbor_id = neighbor.id | default(1) | string %}
		{% for ix_name, ix_config in ix.items() %}
			{% for prefix in ix_config.prefixes if ns.found_ix is none %}
				{% if neighbor.ip | ansible.utils.ipaddr(prefix) is not none and ns.found_ix is none %}
					{% set ns.found_ix = ix_name %}
					{% if ns.peer_type == "routeserver" %}
						{% set ns.neighbor_name = "IXP_RS_" + ix_name.upper() + "_" + neighbor_id + "_" + ns.inet %}
					{% else %}
						{% set ns.neighbor_name = "IXP_" + ix_name.upper() + "_AS" + peer.as | string + "_" + neighbor_id + "_" + ns.inet %}
						{% set ns.peer_type = "ixp_peer" %}
					{% endif %}
				{% endif %}
			{% endfor %}
			{# if no ixp found #}
			{% if ns.found_ix is none %}
				{% if ns.peer_type == "transit" %}
						{% set ns.neighbor_name = "TRANSIT_AS" + peer.as | string + "_" + neighbor_id + "_" + ns.inet %}
				{% elif ns.peer_type == "customer" %}
						{% set ns.neighbor_name = "CUST_AS" + peer.as | string + "_" + neighbor_id + "_" + ns.inet %}
				{% else %}
						{% set ns.neighbor_name = "AS" + peer.as | string + "_" + neighbor_id + "_" + ns.inet %}
				{% endif %}
			{% endif %}
		{% endfor %}
# {{ peer.name }} - AS{{ peer.as }} ({{ ns.peer_type }})
protocol bgp {{ ns.neighbor_name }} {
	local as {{ local_as }};
	neighbor {{ neighbor.ip }} as {{ peer.as }};
	description "{{ peer.name }} - AS{{ peer.as }} ({{ ns.peer_type }})";

	{% if peer.disabled | default(false) %}
	disabled;
	{% endif %}
	{% if ns.inet == "INET6" %}
	ipv6 {
		{% if ns.peer_type == "transit" %}
		import where import_transit_inet6_pref(1234);
		export where export_transit_inet6(false);
		{% elif ns.peer_type == "peer" %}
		import where import_peer_inet6_pref(1235);
		export where export_peer_inet6(false);
		{% elif ns.peer_type == "routeserver" %}
		import where import_ixp_rs_inet6_pref(1236);
		export where export_ixp_rs_inet6(false);
		{% elif ns.peer_type == "ixp_peer" %}
		import where import_ixp_inet6_pref(1237);
		export where export_ixp_inet6(false);
		{% elif ns.peer_type == "customer" %}
		import where import_customer_inet6_pref(1238);
		export where export_customer_inet6(false);
		{% else %}
		import none;
		export none;
		{% endif %}
	};
	{% elif ns.inet == "INET4" %}
	ipv4 {
		{% if ns.peer_type == "transit" %}
		import none;
		export none;
		{% elif ns.peer_type == "peer" %}
		import none;
		export none;
		{% elif ns.peer_type == "routeserver" %}
		import none;
		export none;
		{% elif ns.peer_type == "ixp_peer" %}
		import none;
		export none;
		{% elif ns.peer_type == "customer" %}
		import none;
		export none;
		{% else %}
		import none;
		export none;
		{% endif %}
	};
	{% endif %}
}

	{% endfor %}
{% endfor %}
