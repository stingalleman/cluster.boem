#   volumes:
#     # You may either store all the files in a local folder
#     - ./files:/data
#     # .. or you may split this between different storage points
#     # - ./files:/data
#     # - /path/to/ssd:/data/uploads
#     # - /path/to/large_hdd:/data/media
#   ports:
#     - 8448:8448/tcp

apiVersion: apps/v1
kind: Deployment
metadata:
  name: synapse
  namespace: matrix
  labels:
    app: synapse
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app: synapse
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: synapse
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      containers:
        - name: synapse
          image: docker.io/matrixdotorg/synapse:latest
          # resources:
          #   requests:
          #     cpu: 100m
          #     memory: 100Mi
          #   limits:
          #     cpu: 100m
          #     memory: 100Mi
          # livenessProbe:
          #   tcpSocket:
          #     port: 80
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 5
          #   successThreshold: 1
          #   failureThreshold: 3
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /_status/healthz
          #     port: 80
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 2
          #   successThreshold: 1
          #   failureThreshold: 3
          #   periodSeconds: 10
          env:
            - name: SYNAPSE_CONFIG_PATH
              value: /config/homeserver.yaml
          ports:
            - containerPort: 8008
              name: synapse
          volumeMounts:
            - name: matrix-secret
              mountPath: /secret
            - name: matrix-config
              mountPath: /config
            - name: matrix-data
              mountPath: /data
      volumes:
        - name: matrix-secret
          secret:
            secretName: matrix-secret
        - name: matrix-config
          configMap:
            name: matrix-config
        - name: matrix-data
          persistentVolumeClaim:
            claimName: matrix-data
      restartPolicy: Always
