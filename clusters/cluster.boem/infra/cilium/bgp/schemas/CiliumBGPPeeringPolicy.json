{
  "description": "CiliumBGPPeeringPolicy is a Kubernetes third-party resource for instructing Cilium's BGP control plane to create virtual BGP routers.",
  "type": "object",
  "required": ["metadata"],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": ["string", "null"]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": ["string", "null"],
      "enum": ["CiliumBGPPeeringPolicy"]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": ["object", "null"],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": ["string", "null"]
          }
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": ["array", "null"],
          "items": {
            "type": ["string", "null"]
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": ["string", "null"]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": ["string", "null"]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": ["array", "null"],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": ["object", "null"],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": ["string", "null"]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": ["string", "null"]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": ["object", "null"]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": ["string", "null"]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": ["string", "null"]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": ["string", "null"]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              }
            }
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": ["string", "null"]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": ["string", "null"]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": ["array", "null"],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": ["object", "null"],
            "required": ["apiVersion", "kind", "name", "uid"],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": ["boolean", "null"]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": ["boolean", "null"]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": ["string", "null"]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": ["string", "null"]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": ["string", "null"]
        }
      }
    },
    "spec": {
      "description": "Spec is a human readable description of a BGP peering policy",
      "type": ["object", "null"],
      "required": ["virtualRouters"],
      "properties": {
        "nodeSelector": {
          "description": "NodeSelector selects a group of nodes where this BGP Peering Policy applies. \n If empty / nil this policy applies to all nodes.",
          "type": ["object", "null"],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": ["array", "null"],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": ["object", "null"],
                "required": ["key", "operator"],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string",
                    "enum": ["In", "NotIn", "Exists", "DoesNotExist"]
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": ["array", "null"],
                    "items": {
                      "type": ["string", "null"]
                    }
                  }
                }
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": ["object", "null"],
              "additionalProperties": {
                "description": "MatchLabelsValue represents the value from the MatchLabels {key,value} pair.",
                "type": ["string", "null"],
                "maxLength": 63,
                "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$"
              }
            }
          }
        },
        "virtualRouters": {
          "description": "A list of CiliumBGPVirtualRouter(s) which instructs the BGP control plane how to instantiate virtual BGP routers.",
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "CiliumBGPVirtualRouter defines a discrete BGP virtual router configuration.",
            "type": ["object", "null"],
            "required": ["localASN", "neighbors"],
            "properties": {
              "exportPodCIDR": {
                "description": "ExportPodCIDR determines whether to export the Node's private CIDR block to the configured neighbors.",
                "type": ["boolean", "null"]
              },
              "localASN": {
                "description": "LocalASN is the ASN of this virtual router. Supports extended 32bit ASNs",
                "type": "integer",
                "format": "int64",
                "maximum": 4294967295,
                "minimum": 0
              },
              "neighbors": {
                "description": "Neighbors is a list of neighboring BGP peers for this virtual router",
                "type": "array",
                "minItems": 1,
                "items": {
                  "description": "CiliumBGPNeighbor is a neighboring peer for use in a CiliumBGPVirtualRouter configuration.",
                  "type": ["object", "null"],
                  "required": ["peerASN", "peerAddress"],
                  "properties": {
                    "advertisedPathAttributes": {
                      "description": "AdvertisedPathAttributes can be used to apply additional path attributes to selected routes when advertising them to the peer. If empty / nil, no additional path attributes are advertised.",
                      "type": ["array", "null"],
                      "items": {
                        "description": "CiliumBGPPathAttributes can be used to apply additional path attributes to matched routes when advertising them to a BGP peer.",
                        "type": ["object", "null"],
                        "required": ["selectorType"],
                        "properties": {
                          "communities": {
                            "description": "Communities defines a set of community values advertised in the supported BGP Communities path attributes. If nil / not set, no BGP Communities path attribute will be advertised.",
                            "type": ["object", "null"],
                            "properties": {
                              "large": {
                                "description": "Large holds a list of the BGP Large Communities Attribute (RFC 8092) values.",
                                "type": ["array", "null"],
                                "items": {
                                  "description": "BGPLargeCommunity type represents a value of the BGP Large Communities Attribute (RFC 8092), as three 4-byte decimal numbers separated by colons.",
                                  "type": ["string", "null"],
                                  "pattern": "^([0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-5]):([0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-5]):([0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-5])$"
                                }
                              },
                              "standard": {
                                "description": "Standard holds a list of \"standard\" 32-bit BGP Communities Attribute (RFC 1997) values.",
                                "type": ["array", "null"],
                                "items": {
                                  "description": "BGPStandardCommunity type represents a value of the \"standard\" 32-bit BGP Communities Attribute (RFC 1997) as a 4-byte decimal number or two 2-byte decimal numbers separated by a colon.",
                                  "type": ["string", "null"],
                                  "pattern": "^([0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-5])$|^([0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]):([0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
                                }
                              }
                            }
                          },
                          "localPreference": {
                            "description": "LocalPreference defines the preference value advertised in the BGP Local Preference path attribute. As Local Preference is only valid for iBGP peers, this value will be ignored for eBGP peers (no Local Preference path attribute will be advertised). If nil / not set, the default Local Preference of 100 will be advertised in the Local Preference path attribute for iBGP peers.",
                            "type": ["integer", "null"],
                            "format": "int64",
                            "maximum": 4294967295,
                            "minimum": 0
                          },
                          "selector": {
                            "description": "Selector selects a group of objects of the SelectorType resulting into routes that will be announced with the configured Attributes. If nil / not set, all objects of the SelectorType are selected.",
                            "type": ["object", "null"],
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": ["array", "null"],
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                  "type": ["object", "null"],
                                  "required": ["key", "operator"],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string",
                                      "enum": [
                                        "In",
                                        "NotIn",
                                        "Exists",
                                        "DoesNotExist"
                                      ]
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "type": ["array", "null"],
                                      "items": {
                                        "type": ["string", "null"]
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": ["object", "null"],
                                "additionalProperties": {
                                  "description": "MatchLabelsValue represents the value from the MatchLabels {key,value} pair.",
                                  "type": ["string", "null"],
                                  "maxLength": 63,
                                  "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$"
                                }
                              }
                            }
                          },
                          "selectorType": {
                            "description": "SelectorType defines the object type on which the Selector applies: - For \"PodCIDR\" the Selector matches k8s CiliumNode resources (path attributes apply to routes announced for PodCIDRs of selected CiliumNodes. Only affects routes of cluster scope / Kubernetes IPAM CIDRs, not Multi-Pool IPAM CIDRs. - For \"CiliumLoadBalancerIPPool\" the Selector matches CiliumLoadBalancerIPPool custom resources (path attributes apply to routes announced for selected CiliumLoadBalancerIPPools). - For \"CiliumPodIPPool\" the Selector matches CiliumPodIPPool custom resources (path attributes apply to routes announced for allocated CIDRs of selected CiliumPodIPPools).",
                            "type": "string",
                            "enum": [
                              "PodCIDR",
                              "CiliumLoadBalancerIPPool",
                              "CiliumPodIPPool"
                            ]
                          }
                        }
                      }
                    },
                    "authSecretRef": {
                      "description": "AuthSecretRef is the name of the secret to use to fetch a TCP authentication password for this peer.",
                      "type": ["string", "null"]
                    },
                    "connectRetryTimeSeconds": {
                      "description": "ConnectRetryTimeSeconds defines the initial value for the BGP ConnectRetryTimer (RFC 4271, Section 8).",
                      "type": ["integer", "null"],
                      "format": "int32",
                      "maximum": 2147483647,
                      "minimum": 1
                    },
                    "eBGPMultihopTTL": {
                      "description": "EBGPMultihopTTL controls the multi-hop feature for eBGP peers. Its value defines the Time To Live (TTL) value used in BGP packets sent to the neighbor. The value 1 implies that eBGP multi-hop feature is disabled (only a single hop is allowed). This field is ignored for iBGP peers.",
                      "type": ["integer", "null"],
                      "format": "int32",
                      "maximum": 255,
                      "minimum": 1
                    },
                    "families": {
                      "description": "Families, if provided, defines a set of AFI/SAFIs the speaker will negotiate with it's peer. \n If this slice is not provided the default families of IPv6 and IPv4 will be provided.",
                      "type": ["array", "null"],
                      "items": {
                        "description": "CiliumBGPFamily represents a AFI/SAFI address family pair.",
                        "type": ["object", "null"],
                        "required": ["afi", "safi"],
                        "properties": {
                          "advertisements": {
                            "description": "Advertisements selects group of BGP Advertisement(s) to advertise for this family. \n If not specified, no advertisements are sent for this family. \n This field is ignored in CiliumBGPNeighbor which is used in CiliumBGPPeeringPolicy. Use CiliumBGPPeeringPolicy advertisement options instead.",
                            "type": ["object", "null"],
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": ["array", "null"],
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                  "type": ["object", "null"],
                                  "required": ["key", "operator"],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string",
                                      "enum": [
                                        "In",
                                        "NotIn",
                                        "Exists",
                                        "DoesNotExist"
                                      ]
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "type": ["array", "null"],
                                      "items": {
                                        "type": ["string", "null"]
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": ["object", "null"],
                                "additionalProperties": {
                                  "description": "MatchLabelsValue represents the value from the MatchLabels {key,value} pair.",
                                  "type": ["string", "null"],
                                  "maxLength": 63,
                                  "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$"
                                }
                              }
                            }
                          },
                          "afi": {
                            "description": "Afi is the Address Family Identifier (AFI) of the family.",
                            "type": "string",
                            "enum": ["ipv4", "ipv6", "l2vpn", "ls", "opaque"]
                          },
                          "safi": {
                            "description": "Safi is the Subsequent Address Family Identifier (SAFI) of the family.",
                            "type": "string",
                            "enum": [
                              "unicast",
                              "multicast",
                              "mpls_label",
                              "encapsulation",
                              "vpls",
                              "evpn",
                              "ls",
                              "sr_policy",
                              "mup",
                              "mpls_vpn",
                              "mpls_vpn_multicast",
                              "route_target_constraints",
                              "flowspec_unicast",
                              "flowspec_vpn",
                              "key_value"
                            ]
                          }
                        }
                      }
                    },
                    "gracefulRestart": {
                      "description": "GracefulRestart defines graceful restart parameters which are negotiated with this neighbor. If empty / nil, the graceful restart capability is disabled.",
                      "type": ["object", "null"],
                      "required": ["enabled"],
                      "properties": {
                        "enabled": {
                          "description": "Enabled flag, when set enables graceful restart capability.",
                          "type": "boolean"
                        },
                        "restartTimeSeconds": {
                          "description": "RestartTimeSeconds is the estimated time it will take for the BGP session to be re-established with peer after a restart. After this period, peer will remove stale routes. This is described RFC 4724 section 4.2.",
                          "type": ["integer", "null"],
                          "format": "int32",
                          "maximum": 4095,
                          "minimum": 1
                        }
                      }
                    },
                    "holdTimeSeconds": {
                      "description": "HoldTimeSeconds defines the initial value for the BGP HoldTimer (RFC 4271, Section 4.2). Updating this value will cause a session reset.",
                      "type": ["integer", "null"],
                      "format": "int32",
                      "maximum": 65535,
                      "minimum": 3
                    },
                    "keepAliveTimeSeconds": {
                      "description": "KeepaliveTimeSeconds defines the initial value for the BGP KeepaliveTimer (RFC 4271, Section 8). It can not be larger than HoldTimeSeconds. Updating this value will cause a session reset.",
                      "type": ["integer", "null"],
                      "format": "int32",
                      "maximum": 65535,
                      "minimum": 1
                    },
                    "peerASN": {
                      "description": "PeerASN is the ASN of the peer BGP router. Supports extended 32bit ASNs",
                      "type": "integer",
                      "format": "int64",
                      "maximum": 4294967295,
                      "minimum": 0
                    },
                    "peerAddress": {
                      "description": "PeerAddress is the IP address of the peer. This must be in CIDR notation and use a /32 to express a single host.",
                      "type": "string",
                      "format": "cidr"
                    },
                    "peerPort": {
                      "description": "PeerPort is the TCP port of the peer. 1-65535 is the range of valid port numbers that can be specified. If unset, defaults to 179.",
                      "type": ["integer", "null"],
                      "format": "int32",
                      "maximum": 65535,
                      "minimum": 1
                    }
                  }
                }
              },
              "podIPPoolSelector": {
                "description": "PodIPPoolSelector selects CiliumPodIPPools based on labels. The virtual router will announce allocated CIDRs of matching CiliumPodIPPools. \n If empty / nil no CiliumPodIPPools will be announced.",
                "type": ["object", "null"],
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": ["array", "null"],
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                      "type": ["object", "null"],
                      "required": ["key", "operator"],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string",
                          "enum": ["In", "NotIn", "Exists", "DoesNotExist"]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "type": ["array", "null"],
                          "items": {
                            "type": ["string", "null"]
                          }
                        }
                      }
                    }
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": ["object", "null"],
                    "additionalProperties": {
                      "description": "MatchLabelsValue represents the value from the MatchLabels {key,value} pair.",
                      "type": ["string", "null"],
                      "maxLength": 63,
                      "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$"
                    }
                  }
                }
              },
              "serviceSelector": {
                "description": "ServiceSelector selects a group of load balancer services which this virtual router will announce. The loadBalancerClass for a service must be nil or specify a class supported by Cilium, e.g. \"io.cilium/bgp-control-plane\". Refer to the following document for additional details regarding load balancer classes: \n https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class \n If empty / nil no services will be announced.",
                "type": ["object", "null"],
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": ["array", "null"],
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                      "type": ["object", "null"],
                      "required": ["key", "operator"],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string",
                          "enum": ["In", "NotIn", "Exists", "DoesNotExist"]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "type": ["array", "null"],
                          "items": {
                            "type": ["string", "null"]
                          }
                        }
                      }
                    }
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": ["object", "null"],
                    "additionalProperties": {
                      "description": "MatchLabelsValue represents the value from the MatchLabels {key,value} pair.",
                      "type": ["string", "null"],
                      "maxLength": 63,
                      "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "cilium.io",
      "kind": "CiliumBGPPeeringPolicy",
      "version": "v2alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}
