apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik-ingress
  namespace: traefik
spec:
  chart:
    spec:
      chart: traefik
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
      version: "10.33.0"
  interval: 24h
  values:
    globalArguments:
      - "--global.checknewversion"
      - "--api"
      - "--api.insecure"
      # - "--certificatesresolvers.le-resolver.acme.tlschallenge=true"
      # - "--certificatesresolvers.le-resolver.acme.storage=/certs/acme.json"
      # - "--certificatesresolvers.dns-resolver.acme.dnschallenge.provider=cloudflare"
      # - "--certificatesresolvers.dns-resolver.acme.storage=/certs/acme.json"
      # - "--accesslog=true"

    service:
      enabled: true
      type: LoadBalancer
      spec:
        externalTrafficPolicy: Local
        # loadBalancerIP: "45.83.205.8"
      annotations:
        metallb.universe.tf/loadBalancerIPs: 45.83.205.8
      # loadBalancerSourceRanges:
      #   []
      # - 192.168.0.1/32
      # - 172.16.0.0/16
      # externalIPs:
      #   []
      # - 1.2.3.4
      # One of SingleStack, PreferDualStack, or RequireDualStack.
      # ipFamilyPolicy: RequireDualStack
      # List of IP families (e.g. IPv4 and/or IPv6).
      # ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
      # ipFamilies:
      # - IPv4
      # - IPv6

    deployment:
      enabled: true
      # Can be either Deployment or DaemonSet
      kind: Deployment
      # Number of pods of the deployment (only applies when kind == Deployment)
      replicas: 3
      # initContainers:
      # Related issue: https://github.com/traefik/traefik/issues/6972
      # - name: volume-permissions
      #   image: busybox:1.31.1
      #   command: ["sh", "-c", "chmod 600 /certs/acme.json"]
      #   volumeMounts:
      #     - name: certs
      #       mountPath: /certs

    # Pod disruption budget
    podDisruptionBudget:
      enabled: true
      # maxUnavailable: 1
      # maxUnavailable: 33%
      minAvailable: 2
      # minAvailable: 25%

    # Additional volumeMounts to add to the Traefik container
    # additionalVolumeMounts:
    #   - name: certs
    #     mountPath: /certs

    # Enable persistence using Persistent Volume Claims
    # ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    # After the pvc has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
    # additionalArguments:
    # - "--certificatesresolvers.le.acme.storage=/data/acme.json"
    # It will persist TLS certificates.
    persistence:
      enabled: false
      name: certs
      # existingClaim: "certs"
      accessMode: ReadWriteOnce
      size: 64Mi
      storageClass: "nfs"
      path: /certs
      # annotations: {}
      # subPath: "" # only mount a subpath of the Volume into the pod

    #
    # Configure providers
    #
    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
        # ingressClass: traefik-internal
        # labelSelector: environment=production,method=traefik

      kubernetesIngress:
        enabled: false
        allowExternalNameServices: true
        allowEmptyServices: true
        ingressClass: traefik
        # labelSelector: environment=production,method=traefik
        # IP used for Kubernetes Ingress endpoints
        publishedService:
          enabled: false
          # Published Kubernetes Service to copy status from. Format: namespace/servicename
          # By default this Traefik service
          # pathOverride: ""

    # Environment variables to be passed to Traefik's binary
    # env:
    #   - name: CF_API_EMAIL
    #     valueFrom:
    #       secretKeyRef:
    #         name: cf-api
    #         key: email
    #   - name: CF_API_KEY
    #     valueFrom:
    #       secretKeyRef:
    #         name: cf-api
    #         key: token

    # Configure ports
    ports:
      # The name of this one can't be changed as it is used for the readiness and
      # liveness probes, but you can adjust its config to your liking
      traefik:
        port: 9000
        # Use hostPort if set.
        # hostPort: 9000
        #
        # Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which
        # means it's listening on all your interfaces and all your IPs. You may want
        # to set this value if you need traefik to listen on specific interface
        # only.
        # hostIP: 192.168.100.10

        # Override the liveness/readiness port. This is useful to integrate traefik
        # with an external Load Balancer that performs healthchecks.
        # healthchecksPort: 9000

        # Defines whether the port is exposed if service.type is LoadBalancer or
        # NodePort.
        #
        # You SHOULD NOT expose the traefik port on production deployments.
        # If you want to access it from outside of your cluster,
        # use `kubectl port-forward` or create a secure ingress
        expose: false
        # The exposed port for this service
        exposedPort: 9000
        # The port protocol (TCP/UDP)
        protocol: TCP
      web:
        port: 8000
        # hostPort: 8000
        expose: true
        exposedPort: 80
        # The port protocol (TCP/UDP)
        protocol: TCP
        # Use nodeport if set. This is useful if you have configured Traefik in a
        # LoadBalancer
        # nodePort: 32080
        # Port Redirections
        # Added in 2.2, you can make permanent redirects via entrypoints.
        # https://docs.traefik.io/routing/entrypoints/#redirection
        redirectTo: websecure
      websecure:
        port: 8443
        # hostPort: 8443
        expose: true
        exposedPort: 443
        # The port protocol (TCP/UDP)
        protocol: TCP
        # nodePort: 32443
        # Enable HTTP/3.
        # Requires enabling experimental http3 feature and tls.
        # Note that you cannot have a UDP entrypoint with the same port.
        # http3: true
        # Set TLS at the entrypoint
        # https://doc.traefik.io/traefik/routing/entrypoints/#tls
        tls:
          enabled: true
          # this is the name of a TLSOption definition
          # options: ""
          # certResolver: "le-resolver"
          # domains: []
          # - main: example.com
          #   sans:
          #     - foo.example.com
          #     - bar.example.com
      # metrics:
      #   port: 9100
      #   # hostPort: 9100
      #   # Defines whether the port is exposed if service.type is LoadBalancer or
      #   # NodePort.
      #   #
      #   # You may not want to expose the metrics port on production deployments.
      #   # If you want to access it from outside of your cluster,
      #   # use `kubectl port-forward` or create a secure ingress
      #   expose: false
      #   # The exposed port for this service
      #   exposedPort: 9100
      #   # The port protocol (TCP/UDP)
      #   protocol: TCP
      # dns-udp:
      #   port: 1053
      #   #   # hostPort: 8000
      #   expose: true
      #   exposedPort: 53
      #   #   # The port protocol (TCP/UDP)
      #   protocol: UDP
      # dns-tcp:
      #   port: 1054
      #   #   # hostPort: 8000
      #   expose: true
      #   exposedPort: 53
      #   #   # The port protocol (TCP/UDP)
      #   protocol: TCP
